name: Train Model

on:
  workflow_dispatch:
    inputs:
      script_choice:
        description: 'Model Type: Select a model / notebook'
        required: true
        type: choice
        options:
          - "02_Train-CNN_ana-cont.ipynb"
          - "02_Train_CNN_ana-class100.ipynb"
          - "Custom Notebook Name"
      custom_name:
        description: 'Custom Notebook Name: Enter the full notebook name (optional)'
        required: false
        type: string
      tflite_size:
        description: 'Model Size: Select model size (Availability depending on model type)'
        required: true
        type: choice
        options:
          - "s0"
          - "s1"
          - "s2"
          - "s3"
        default: "s1"
      tflite_version:
        description: 'Model Version: Enter model version (e.g. 0100 -> 01.00)'
        required: true
        type: string
      rawimage_dir:
        description: 'Raw Images Directory (optional, default: data_raw_all)'
        required: false
        type: string
      commit_to_branch:
        description: 'Commit result to actual branch?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.commit_to_branch == 'true' && 'concurrent' || github.run_id }}
  cancel-in-progress: false

permissions:
  contents: write
  actions: write  # Required to run workflow_dispatch

jobs:
  run-notebook:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        set -euxo pipefail

        if [ ! -d "$PWD/.venv" ]; then
          python -m venv "$PWD/.venv"
        fi

        source "$PWD/.venv/bin/activate"

        pip install --upgrade pip
        pip install jupyter nbconvert papermill
        pip install -r requirements.txt

    - name: Prepare environment and validate input
      run: |
        set -euxo pipefail

        # Validate and resolve notebook name
        if [[ "${{ github.event.inputs.script_choice }}" == "Custom Notebook Name" ]]; then
          if [[ -z "${{ github.event.inputs.custom_name }}" ]]; then
            echo "Error: Custom notebook name must be provided!"
            exit 1
          fi
          notebook="${{ github.event.inputs.custom_name }}"
          [[ "$notebook" != *.ipynb ]] && notebook="$notebook.ipynb"
        else
          notebook="${{ github.event.inputs.script_choice }}"
        fi

        if [[ ! -f "$notebook" ]]; then
          echo "Error: Notebook '$notebook' not found!"
          exit 1
        fi

        echo "NOTEBOOK=$notebook" >> $GITHUB_ENV
        echo "NOTEBOOK_BASENAME=$(basename "$notebook" .ipynb)" >> $GITHUB_ENV
        echo "NOTEBOOK_MODELTYPE=$(basename "$notebook" .ipynb | cut -c 14-)" >> $GITHUB_ENV

        
        # Set model version
        version=${{ github.event.inputs.tflite_version }}
        
        # Check if the version is numeric
        if [[ "$version" =~ ^[0-9]+$ ]]; then
          # If the numeric version is shorter than 4 characters, pad with leading zeros
          if [ ${#version} -lt 4 ]; then
            version=$(printf "%04d" "$version")
          fi
        fi

        echo "MODELVERSION=$version" >> $GITHUB_ENV

    - name: Prepare folders
      run: |
        set -euxo pipefail

        RAWIMAGEDIR="${{ github.event.inputs.rawimage_dir }}"
        RAWIMAGEDIR="${RAWIMAGEDIR:-data_raw_all}"
        echo "RAWIMAGEDIR=$RAWIMAGEDIR" >> $GITHUB_ENV

        echo "DATASETDIR=data_resize_all" >> $GITHUB_ENV
        echo "MODELDIR=models_tmp" >> $GITHUB_ENV
        mkdir -p data_resize_all models_tmp

        DETAILS_PATH="models_tmp/training_details/${{ env.NOTEBOOK_MODELTYPE }}_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}"
        echo "TRAINING_DETAILS=$DETAILS_PATH" >> $GITHUB_ENV
        mkdir -p "$DETAILS_PATH"

    - name: Prepare image dataset
      run: |
        set -euxo pipefail
        source "$PWD/.venv/bin/activate"

        output_notebook="${{ env.TRAINING_DETAILS }}/01_Image-Preparation_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}_result.ipynb"

        papermill 01_Image-Preparation.ipynb "$output_notebook" \
          -p Input_Dir "${{ env.RAWIMAGEDIR }}" \
          -p Output_Dir "${{ env.DATASETDIR }}" \
          --log-output --log-level INFO --progress-bar
        
        jupyter nbconvert "$output_notebook" --to html --output-dir="${{ env.TRAINING_DETAILS }}"

    - name: Train model
      run: |
        set -euxo pipefail
        source "$PWD/.venv/bin/activate"

        output_notebook="${{ env.TRAINING_DETAILS }}/${{ env.NOTEBOOK_BASENAME }}_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}_result.ipynb"

        papermill "${{ env.NOTEBOOK }}" "$output_notebook" \
          -p TFlite_Version "${{ env.MODELVERSION }}" \
          -p TFlite_Size "${{ github.event.inputs.tflite_size }}" \
          -p Output_Dir "${{ env.MODELDIR }}" \
          --log-output --log-level INFO --progress-bar
        
        jupyter nbconvert "$output_notebook" --to html --output-dir="${{ env.TRAINING_DETAILS }}"

    - name: Compare models
      run: |
        set -euxo pipefail
        source "$PWD/.venv/bin/activate"

        output_notebook="${{ env.TRAINING_DETAILS }}/03_Compare_Models_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}_result.ipynb"

        papermill 03_Compare_Models.ipynb "$output_notebook" \
          -p Input_Dir "${{ env.RAWIMAGEDIR }}" \
          --log-output --log-level INFO --progress-bar
        
        jupyter nbconvert "$output_notebook" --to html --output-dir="${{ env.TRAINING_DETAILS }}"

    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.NOTEBOOK_MODELTYPE }}_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}
        path: ${{ env.MODELDIR }}/

    - name: Commit results to branch (if enabled)
      if: ${{ github.event.inputs.commit_to_branch == 'true' && github.ref != 'refs/heads/main' }}
      run: |
        set -euxo pipefail

        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        mkdir -p models
        subfolder=""
        tflite_file=$(find "${{ env.MODELDIR }}" -maxdepth 1 -name "*.tflite" | head -n 1)
        [[ "$tflite_file" == *"ana-cont"* ]] && subfolder="ana-cont"
        [[ "$tflite_file" == *"ana-class100"* ]] && subfolder="ana-class100"
        dest="models${subfolder:+/$subfolder}"

        rsync -a "${{ env.MODELDIR }}/" "$dest/"

        rm -rf "${{ env.MODELDIR }}"
        
        git add models/
        git commit -m "Add models from ${{ env.NOTEBOOK_MODELTYPE }}_${{ env.MODELVERSION }}_${{ github.event.inputs.tflite_size }}"
        
        git pull --rebase
        git push

    - name: Trigger compare-models workflow on current branch
      if: ${{ github.event.inputs.commit_to_branch == 'true' && github.ref != 'refs/heads/main' }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH_NAME: ${{ github.ref_name }}
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/compare-models.yaml/dispatches \
          -d "{\"ref\":\"$BRANCH_NAME\"}"
